---
import Icon from '../components/Icon.astro';

interface QuickInfoItem {
  id: number;
  data: {
    icon: {
      type: string;
      name: string;
    };
    text: string;
  };
}

const { quickInfo } = Astro.props as { quickInfo: QuickInfoItem[] };
---

<div class="hero-container">
  <section class="hero-section">
    <div class="hero-content">
      <h1 class="glitch-text">Diego Bustos</h1>

      <p class="hero-subtitle">
        <span class="glow-word">Fullstack</span><span class="mobile-hidden"><br></span> Software Engenieer
      </p>

      <div class="quick-info-list">
        {quickInfo.map((info) => (
          <div class="li-hero">
            <Icon
              type={info.data.icon.type as "lucide" | "simple-icons"}
              name={info.data.icon.name as any}
              width={24}
              height={24}
              class="glow-icon"
            />
            <span>{info.data.text}</span>
          </div>
        ))}
      </div>
    </div>
  </section>
</div>

<style>
.hero-container {
  backdrop-filter: blur(10px) brightness(0.9);
  background-color: rgba(18, 18, 18, 0.4); 
  border: 1px solid #353535; 
  padding: 2rem;
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.3);
  z-index: 2;
  animation: fadeIn 1.2s ease-out;
}

.hero-section {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: stretch;
  position: relative;
  z-index: 10;
}

.hero-content {
  text-align: center;
  color: white;
  animation: fadeIn 1.5s ease-in;
  align-content: center;
  padding: 1.5rem;
}

.glitch-text {
  font-size: 2.5rem;
  font-weight: 800;
  color: rgb(255, 255, 255);
  margin-top: 0;
  margin-bottom: 1rem;
}

.glitch-active {
  text-shadow: 0 0 10px rgb(255, 255, 255), 0 0 20px #f8f8f8;
  animation: glitch 1.5s ease-in-out;
}

.hero-subtitle {
  font-size: 1.5rem;
  margin-top: 0.5rem;
}

.glow-word {
  color: #ff6f00;
  text-shadow: 0 0 5px #ff6f00;
  font-weight: 500;
}

.quick-info-list {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 1rem;
  margin-top: 1.25rem;
}

.li-hero {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: .5rem;
  font-size: 1rem;
  opacity: 0.9;
}

.tech-stack {
  font-family: monospace;
  font-size: 1rem;
  margin-top: 1.8rem;
  opacity: 0.8;
}

.mobile-hidden {
    display: none;
  }
  
@media screen and (max-width: 640px) {
  .glitch-text {
    font-size: 2rem;
  }

  .mobile-hidden {
    display: inline;
  }
  
  .hero-container {
    padding: 0;
    margin: 0 1rem;
    gap: 1rem;
  }
}

/* Animaciones */
@keyframes glitch {
  0% { text-shadow: 2px 0 red, -2px 0 cyan; }
  33% { text-shadow: -2px 0 lime, 2px 0 magenta; }
  66% { text-shadow: 2px 2px red, -2px -2px blue; }
  100% { text-shadow: 2px 0 red, -2px 0 cyan; }
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(-20px); }
  to { opacity: 1; transform: translateY(0); }
}
</style>

<script>
  const glitchElement = document.querySelector('.glitch-text');

  function triggerGlitch() {
    glitchElement.classList.add('glitch-active');
    setTimeout(() => {
      glitchElement.classList.remove('glitch-active');
    }, 1500);
  }
  
  setInterval(() => {
    triggerGlitch();
  }, 10000);
</script>
