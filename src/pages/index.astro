---
import '../styles/index.css';

import ProfilePicture from '../assets/pfp.png';

import Card from '../components/Card.astro';
import Layout from '../layouts/Layout.astro';
import TooltipIcon from '../components/TooltipIcon.astro';
import Icon from '../components/Icon.astro';
import { getCollection } from 'astro:content';
import { getEntry } from 'astro:content';
import { render } from 'astro:content';
import { name, openGraph } from 'spectre:globals';
import Hero from '../components/Hero.astro';

const [posts, projects, about, workExperience, quickInfo, socials] = await Promise.all([
	getCollection('posts', (post) => post.data.draft !== true),
	getCollection('projects'),
	getEntry('other', 'about'),
	getCollection('workExperience'),
	getCollection('quickInfo'),
	getCollection('socials')
]);

// biome-ignore lint/style/noNonNullAssertion: Should always be defined.
const { Content: About } = await render(about!);
---

<Layout
	title={openGraph.home.title || name}
	description={openGraph.home.description}
	pagefindIgnore
>
<Hero slot="hero" quickInfo={quickInfo} />
	<div class="layout-grid-left" slot="left">
		<Card class="flex-col-card">
			<h2 class="no-mt">Tech Stack</h2>
			<ul class="overview-list">
			  <li>
				<Icon type="simple-icons" name="spring" width={24} height={24} class="glow-icon" />
				<span>Spring Boot</span>
			  </li>
			  <li>
				<Icon type="simple-icons" name="react" width={24} height={24} class="glow-icon" />
				<span>React</span>
			  </li>
			  <li>
				<Icon type="simple-icons" name="tailwindcss" width={24} height={24} class="glow-icon" />
				<span>Tailwind CSS</span>
			  </li>
			  <li>
				<Icon type="simple-icons" name="postgresql" width={24} height={24} class="glow-icon" />
				<span>PostgreSQL</span>
			  </li>
			  <li>
				<Icon type="simple-icons" name="mongodb" width={24} height={24} class="glow-icon" />
				<span>MongoDB</span>
			  </li>
			  <li>
				<Icon type="simple-icons" name="docker" width={24} height={24} class="glow-icon" />
				<span>Docker</span>
			  </li>
			  <li>
				<Icon type="simple-icons" name="swagger" width={24} height={24} class="glow-icon" />
				<span>Swagger</span>
			  </li>
			</ul>
		  </Card>
		  
		<Card>
			<h3 class="no-mt">Socials</h3>
			<ul class="overview-list">
				{socials.map((item) => (
					<li>
						<a href={item.data.link} class="socials-link" target="_blank">
							<Icon type={item.data.icon.type} name={item.data.icon.name as any} width={24} height={24} class='glow-icon' />
							<span>{item.data.text}</span>
						</a>
					</li>
				))}
			</ul>
		</Card>
	</div>
	<div class="layout-grid-right" slot="right">
		<Card>
			<div class="header-container">
				<Icon type='lucide' name="user" width={24} height={24} class='glow-icon' />
				<h2>About me</h2>
			</div>
			<div class="prose">
				<About />
			</div>
		</Card>
		<Card>
			<div class="header-container projects-header">
			<div class="left-items">
				<Icon type='lucide' name="folder-git" width={24} height={24} class='glow-icon' />
				<h2>Latest Projects</h2>
			</div>
			<a href="/projects" class="see-all-btn">View All Projects</a>
	</div>
			<div class="content-container">
				{projects.sort((a, b) => b.data.date.getTime() - a.data.date.getTime()).slice(0, 2).map((project) => (
					<a href={`/projects/${project.id}`} class="post-container">
						<div class="post-header">
							<h3>{project.data.title}</h3>
							<span class="post-date">{project.data.date.toLocaleDateString()}</span>
						</div>
						<span>{project.data.description}</span>
						{project.data.techs && (
						<div class="tech-stack">
							<strong>Techs:</strong>
							<div class="tech-icons">
							{project.data.techs.map((tech) => (
								<TooltipIcon icon={tech.icon} label={tech.name} width={24} height={24} class='glow-icon'/>
								))}
							</div>
						</div>
						)}
					</a>
				))}
			</div>
		</Card>
		<Card>
			<div class="header-container">
				<Icon type='lucide' name="briefcase-business" width={24} height={24} class='glow-icon' />
				<h2>Work Experience</h2>
			</div>
			<div class="work-experience-container">
				{workExperience.map((entry) => (
					<div class="work-experience-entry">
						<span class="work-experience-duration">{entry.data.duration}</span>
						<h3 class="work-experience-role">{entry.data.title}</h3>
						<span class="work-experience-company">{entry.data.company}</span>
						<p  class="work-experience-desc" set:html={entry.data.description.replace(/\n/g, "<br>")}></p>
					</div>
				))}
			</div>
		</Card>
	</div>
</Layout>

<style>

.projects-header {
	display: flex;
	align-items: center;
}

.projects-header .left-items {
	display: flex;
	align-items: center;
	gap: 1rem;
}

.see-all-btn {
	margin-left: auto;
	padding: 0.3rem 0.6rem;
	color: white;
	border: 1px solid #353535;
	text-decoration: none;
	font-weight: 500;
	transition: background-color 0.2s;
}

.see-all-btn:hover {
	background-color: var(--primary);
}
</style>
